<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.whkj.spikes.dao.TagDOMapper">
    <resultMap id="BaseResultMap" type="com.whkj.spikes.dao.dataobject.TagDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tag
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.whkj.spikes.dao.dataobject.TagDO" keyProperty="id" useGeneratedKeys="true" keyColumn="id">
    insert ignore into tag ( name,create_time,update_time)
    values (#{name,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
  </insert>

    <insert id="batchInsert" parameterType="java.util.List" keyProperty="id" useGeneratedKeys="true" keyColumn="id">
        insert into tag(name,create_time,update_time)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.name,jdbcType=VARCHAR},#{item.createTime,jdbcType=TIMESTAMP},#{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.whkj.spikes.dao.dataobject.TagDO">
    update tag
    set name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, name, state, create_time, update_time
    from tag
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="listByName" resultMap="BaseResultMap">
        select id, name, state
        from tag
        where name in
        <foreach item="name" index="index" collection="names"
                 open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <select id="listById" resultMap="BaseResultMap">
        select id, name, state
        from tag
        where id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, state, create_time, update_time
    from tag
  </select>
</mapper>